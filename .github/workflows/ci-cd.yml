name: Deploy mono-repo without OCPP LIGHTSAIL

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        

    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        # AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID}}
        ECR_REPOSITORY: mono-repo-without-ocpp
        IMAGE_TAG: latest
     

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Build and Push Docker image
        id:  build-and-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mono-repo-without-ocpp
          IMAGE_TAG: latest

        run: |     
            docker build -t ${{env.ECR_REGISTRY}}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
            docker push ${{env.ECR_REGISTRY}}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      
      - name: Deploy to EC2
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: mono-repo-without-ocpp
            IMAGE_TAG: latest
            LIGHTSAIL_INSTANCE_IP: ${{ secrets.MONO_REPO_WITHOUT_OCPP}}
            SSH_KEY: ${{ secrets.LIGHTSAIL_PRIVATE_KEY }}
            USERNAME: ec2-user
            PORT: 5050
            AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
            CONTAINER_NAME: non-ocpp

        uses: appleboy/ssh-action@master
        with:
            host: ${{ env.LIGHTSAIL_INSTANCE_IP }}
            username: ${{ env.USERNAME }}
            key: ${{ env.SSH_KEY }}
              
            script: |

                # Refresh ECR login
                aws ecr get-login-password --region ${{ env.AWS_REGION }} | sudo docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
            
                # Pull Docker Image
                sudo docker pull ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

                sudo docker stop ${{ env.CONTAINER_NAME }} || true
                sudo docker rm ${{ env.CONTAINER_NAME }} || true

                sudo docker run -d \
                -p ${{ env.PORT }}:${{ env.PORT }} \
                -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
                -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
                -e AWS_REGION=${{ secrets.AWS_REGION }} \
                --name ${{ env.CONTAINER_NAME }} \
                ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

                
        
          
